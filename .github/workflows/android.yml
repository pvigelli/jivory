name: Build Android APK

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Cache pip
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Cache .buildozer
      - name: Cache buildozer
        uses: actions/cache@v4
        with:
          path: .buildozer
          key: ${{ runner.os }}-buildozer-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildozer-

      # Cache Android SDK
      - name: Cache Android SDK
        uses: actions/cache@v4
        with:
          path: /usr/local/lib/android/sdk
          key: ${{ runner.os }}-androidsdk-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-androidsdk-

      # Cache Android NDK
      - name: Cache Android NDK
        uses: actions/cache@v4
        with:
          path: ~/android-ndk-r25b
          key: ${{ runner.os }}-androidndk-r25b
          restore-keys: |
            ${{ runner.os }}-androidndk-

      # Cache ccache
      - name: Cache ccache
        uses: actions/cache@v4
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-ccache
          restore-keys: |
            ${{ runner.os }}-ccache

      - name: Install base packages
        run: |
          sudo apt-get update
          sudo apt-get install -y git curl unzip tar \
              build-essential libffi-dev libssl-dev libsqlite3-dev \
              libjpeg-dev zlib1g-dev pkg-config ccache
          git --version
          tar --version
          unzip -v

      - name: Set environment variables
        run: |
          echo "ANDROID_SDK_ROOT=/usr/local/lib/android/sdk" >> "$GITHUB_ENV"
          echo "ANDROID_NDK_ROOT=$HOME/android-ndk-r25b" >> "$GITHUB_ENV"
          echo "/usr/local/lib/android/sdk/cmdline-tools/latest/bin" >> "$GITHUB_PATH"
          echo "/usr/local/lib/android/sdk/platform-tools" >> "$GITHUB_PATH"

      - name: Install Android SDK commandline-tools
        run: |
          sudo mkdir -p /usr/local/lib/android/sdk/cmdline-tools
          cd /usr/local/lib/android/sdk/cmdline-tools
          if [ ! -d "latest" ]; then
            sudo curl -fL -o commandlinetools.zip https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
            sudo unzip -q -o commandlinetools.zip
            sudo rm -f commandlinetools.zip
            [ -d cmdline-tools ] && sudo mv -f cmdline-tools latest || true
          fi

      - name: Accept SDK licenses & install platforms/build-tools
        run: |
          yes | /usr/local/lib/android/sdk/cmdline-tools/latest/bin/sdkmanager --sdk_root="$ANDROID_SDK_ROOT" --licenses
          /usr/local/lib/android/sdk/cmdline-tools/latest/bin/sdkmanager --sdk_root="$ANDROID_SDK_ROOT" \
            "platform-tools" "platforms;android-33" "build-tools;33.0.2"

      - name: Install Android NDK r25b
        run: |
          cd "$HOME"
          if [ ! -d "android-ndk-r25b" ]; then
            curl -fL -o ndk.zip https://dl.google.com/android/repository/android-ndk-r25b-linux.zip
            unzip -q -o ndk.zip
            rm -f ndk.zip
          fi
          test -f "$HOME/android-ndk-r25b/source.properties"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Python tooling
        run: |
          python -m pip install --upgrade pip
          pip install "buildozer>=1.5.0,<1.6"
          pip install "Cython<3.0"
          pip install git+https://github.com/kivy/python-for-android.git@master

      - name: Verify environment
        run: |
          echo "ANDROIDSDK=$ANDROID_SDK_ROOT"
          echo "ANDROIDNDK=$ANDROID_NDK_ROOT"
          echo "PATH=$PATH"
          which python
          python -m pip show buildozer

      - name: Symlink sdkmanager (compat workaround)
        run: |
          sudo mkdir -p /usr/local/lib/android/sdk/tools/bin
          sudo ln -sf /usr/local/lib/android/sdk/cmdline-tools/latest/bin/sdkmanager /usr/local/lib/android/sdk/tools/bin/sdkmanager        

      - name: Install system dependencies (autotools, java17)
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            autoconf \
            automake \
            autopoint \
            gettext \
            libtool \
            libltdl-dev \
            pkg-config \
            libffi-dev \
            zlib1g-dev \
            libssl-dev \
            unzip \
            openjdk-17-jdk

      - name: Clean previous build
        run: buildozer android clean

      - name: Build with Buildozer
        run: |
          export ANDROIDSDK="$ANDROID_SDK_ROOT"
          export ANDROIDNDK="$ANDROID_NDK_ROOT"
          export ANDROID_HOME="$ANDROID_SDK_ROOT"
          export USE_CCACHE=1
          buildozer -v android debug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: jivory-apk
          path: bin/*.apk
