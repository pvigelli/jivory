name: Build Android APK

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      # Cache Buildozer
      - name: Cache buildozer
        uses: actions/cache@v3
        with:
          path: |
            .buildozer
            ~/.buildozer
          key: ${{ runner.os }}-buildozer-${{ hashFiles('buildozer.spec') }}
          restore-keys: |
            ${{ runner.os }}-buildozer-

      # Cache Android SDK
      - name: Cache Android SDK
        uses: actions/cache@v3
        with:
          path: /usr/local/lib/android/sdk
          key: ${{ runner.os }}-android-sdk
          restore-keys: |
            ${{ runner.os }}-android-

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git zip unzip openjdk-17-jdk \
            pkg-config libffi-dev libssl-dev \
            build-essential autoconf automake \
            cmake libtool

      - name: Upgrade pip & install buildozer
        run: |
          python -m pip install --upgrade pip
          pip install buildozer==1.5.0 Cython==0.29.36

      - name: Force NDK r25b only
        run: |
          rm -rf /usr/local/lib/android/sdk/ndk/*
          echo "Pulite versioni NDK preinstallate, useremo solo r25b di buildozer"

      - name: Build with Buildozer
        run: |
          export ANDROIDSDK=$HOME/.buildozer/android/platform/android-sdk
          export ANDROIDNDK=$HOME/.buildozer/android/platform/android-ndk-r25b
          export ANDROIDAPI=33
          export ANDROIDMINAPI=21
          buildozer -v android debug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v3
        with:
          name: android-apk
          path: bin/*.apk
